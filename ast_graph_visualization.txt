=== AST VISUAL REPRESENTATION ===
This is a text-based representation of your AST.
For a graphical image, install Graphviz from: https://graphviz.org/download/

AST Structure (from DOT file):
 • Class: CompiladorCompleto
 • Field: frequenciaMHz inteiro = 42
 • Literal: INTEGER = 42
 • Field: tensaoVolts real = 3.14159
 • Literal: FLOAT = 3.14159
 • Field: codigoPostDisplay caractere = 'X'
 • Literal: CHAR = 'X'
 • Field: string texto = \"Compilador Orientado a Objetos\"
 • Literal: STRING = \"Compilador Orientado a Objetos\"
 • Field: frequenciaMHz[] numeros = {10,20,30,40,50}
 • Array Initializer
 • Literal: INTEGER = 10
 • Literal: INTEGER = 20
 • Literal: INTEGER = 30
 • Literal: INTEGER = 40
 • Literal: INTEGER = 50
 • Field: tensaoVolts[] decimais = {1.1,2.2,3.3,4.4}
 • Array Initializer
 • Literal: FLOAT = 1.1
 • Literal: FLOAT = 2.2
 • Literal: FLOAT = 3.3
 • Literal: FLOAT = 4.4
 • Method: public frequenciaMHz soma()
 • Parameters
 • Parameter: frequenciaMHz a
 • Parameter: frequenciaMHz b
 • Block
 • Statement: RETURN
 • Multiple Results
 • Expression: IDENTIFIER [a]
 • Expression: IDENTIFIER [b]
 • Method: public frequenciaMHz multiplicacao()
 • Parameters
 • Parameter: frequenciaMHz x
 • Parameter: frequenciaMHz y
 • Block
 • Field: frequenciaMHz resultado = x*y
 • Multiple Results
 • Expression: IDENTIFIER [x]
 • Expression: IDENTIFIER [y]
 • Statement: RETURN
 • Expression: IDENTIFIER [resultado]
 • Method: public frequenciaMHz maiorValor()
 • Parameters
 • Parameter: frequenciaMHz num1
 • Parameter: frequenciaMHz num2
 • Block
 • Statement: IF
 • Multiple Results
 • Expression: IDENTIFIER [num1]
 • Expression: IDENTIFIER [num2]
 • Block
 • Statement: RETURN
 • Expression: IDENTIFIER [num1]
 • Block
 • Statement: RETURN
 • Expression: IDENTIFIER [num2]
 • Method: public string classificarNumero()
 • Parameters
 • Parameter: frequenciaMHz valor
 • Block
 • Statement: IF
 • Multiple Results
 • Expression: IDENTIFIER [valor]
 • Literal: INTEGER = 0
 • Block
 • Statement: IF
 • Multiple Results
 • Expression: IDENTIFIER [valor]
 • Literal: INTEGER = 100
 • Block
 • Statement: RETURN
 • Literal: STRING = \"Grande\"
 • Block
 • Statement: RETURN
 • Literal: STRING = \"Pequeno Positivo\"
 • Block
 • Statement: RETURN
 • Literal: STRING = \"Negativo ou Zero\"
 • Method: public frequenciaMHz calcularExpressao()
 • Parameters
 • Parameter: frequenciaMHz a
 • Parameter: frequenciaMHz b
 • Parameter: frequenciaMHz c
 • Block
 • Field: frequenciaMHz resultado = a+b+c
 • Multiple Results
 • Multiple Results
 • Expression: IDENTIFIER [a]
 • Expression: IDENTIFIER [b]
 • Expression: IDENTIFIER [c]
 • Statement: RETURN
 • Expression: IDENTIFIER [resultado]
 • Method: public tensaoVolts operacoesComplexas()
 • Parameters
